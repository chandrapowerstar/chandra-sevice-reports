terraform {
  backend "s3" {
    dynamodb_table = "terraform-state-lock"
  }
}

data "terraform_remote_state" "ecs_alb" {
  backend = "s3"

  config = {
    bucket  = var.terraform-state-bucket
    key     = "${var.environment}/${var.ecs_alb_state_key}"
    region  = var.aws_region
    profile = var.aws_profile
  }
}

data "terraform_remote_state" "vpc_state_file" {
  backend = "s3"

  config = {
    bucket  = var.terraform-state-bucket
    key     = "${var.environment}/${var.vpc_state_file}"
    region  = var.aws_region
    profile = var.aws_profile
  }
}

module "pol-service" {
  source              = "git::git@github.com:SainsburysNDA/pollen-infra-common.git//terraform-alb-ecs/modules/ecs-service"
  VPC_ID              = data.terraform_remote_state.vpc_state_file.outputs.vpc_id
  APPLICATION_NAME    = "${var.environment}-${var.APPLICATION_NAME}"
  APPLICATION_PORT    = var.APPLICATION_PORT
  HOST_PORT           = "0"
  APPLICATION_VERSION = var.APPLICATION_VERSION
  CLUSTER_ARN         = data.terraform_remote_state.ecs_alb.outputs.middleware-ecs-cluster-arn
  execution_role_arn  = data.terraform_remote_state.ecs_alb.outputs.secrets_retrieval_role_arn
  AWS_REGION          = var.aws_region
  HEALTHY_THRESHOLD   = var.HEALTHY_THRESHOLD
  UNHEALTHY_THRESHOLD = var.UNHEALTHY_THRESHOLD
  TIMEOUT             = var.TIMEOUT
  HEALTH_PATH         = var.HEALTH_PATH
  INTERVAL            = var.INTERVAL
  #  matcher             = "${var.HEALTHCHECK_MATCHER}"
  HEALTHCHECK_MATCHER = var.HEALTHCHECK_MATCHER
  CPU_RESERVATION     = var.CPU_RESERVATION
  MEMORY_RESERVATION  = var.MEMORY_RESERVATION
  LOG_GROUP           = "${var.environment}-${var.APPLICATION_NAME}-group"
  DESIRED_COUNT       = var.DESIRED_COUNT
  ALB_ARN             = data.terraform_remote_state.ecs_alb.outputs.external-alb-arn
  ECR_URL             = "${var.ECR_REPO_PATH}/${var.PROJECT_NAME}/${var.APPLICATION_NAME}"
  ENV                 = var.environment
  ECS_DISC_ID         = data.terraform_remote_state.vpc_state_file.outputs.service_discovery
  tags                = local.tags
}

module "middleware-alb-https-rule-logout" {
  source           = "git::git@github.com:SainsburysNDA/pollen-infra-common.git//terraform-alb-ecs/modules/alb-rule"
  LISTENER_ARN     = data.terraform_remote_state.ecs_alb.outputs.external-alb-https-listener-arn
  PRIORITY         = 55
  TARGET_GROUP_ARN = module.pol-service.target_group_arn
  CONDITION_FIELD  = "path-pattern"
  CONDITION_VALUES = [var.LOGOUT_PATH]
}

module "middleware-alb-https-rule-swagger" {
  source           = "git::git@github.com:SainsburysNDA/pollen-infra-common.git//terraform-alb-ecs/modules/alb-rule"
  LISTENER_ARN     = data.terraform_remote_state.ecs_alb.outputs.external-alb-https-listener-arn
  PRIORITY         = 57
  TARGET_GROUP_ARN = module.pol-service.target_group_arn
  CONDITION_FIELD  = "path-pattern"
  CONDITION_VALUES = [var.SWAGGER_URL]
}